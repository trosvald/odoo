# ---------------------------------------------------------------------------
# Dockerdoo Environment Configuration (.env)
#
# Copy this file to .env and modify the values as needed.
# This file defines variables used by docker-compose and the container entrypoint.
# ---------------------------------------------------------------------------

# ===========================================================================
# Project Versioning
# ===========================================================================

# Specifies the Odoo version tag to use (e.g., 17.0, 16.0, master).
# This MUST match the Odoo source code version if using hosted mode.
# Used as a build argument and in the image tag in docker-compose.yml.
ODOO_VERSION=18.0

# Specifies the PostgreSQL version tag to use (e.g., 16, 15).
# Used in the db service image tag in docker-compose.yml.
PSQL_VERSION=17

# ===========================================================================
# Docker Build Arguments (Optional Overrides)
# ===========================================================================
# These variables override the default build arguments defined in the Dockerfile.
# They are passed during the 'docker-compose build' command via docker-compose.yml.

# Python base image version tag (e.g., 3.11, 3.10). Combined with OS_VARIANT.
PYTHON_VERSION=3.12
# Python base image OS variant (e.g., bookworm, bullseye). Combined with PYTHON_VERSION.
OS_VARIANT=slim-bookworm
# Version of wkhtmltopdf package to install.
WKHTMLTOX_VERSION=0.12.6.1-3
# APP_UID and APP_GID can also be passed as build args to set the internal odoo user/group IDs.

# ===========================================================================
# PostgreSQL Database Configuration
# ===========================================================================
# These variables configure the PostgreSQL service in docker-compose.yml.
# The entrypoint.sh script also uses these (via defaults or DB_ENV_* variables)
# to configure Odoo's connection to the database if not set in ODOO_RC.

# Default database name to be created.
POSTGRES_DB=postgres
# Database superuser name.
POSTGRES_USER=odoo
# Database superuser password.
POSTGRES_PASSWORD=odoo

# ===========================================================================
# Dockerdoo Feature Flags (Controlled by entrypoint.sh)
# ===========================================================================

# Set to 1 to automatically pip install requirements.txt found in ODOO_EXTRA_ADDONS subdirectories on startup.
PIP_AUTO_INSTALL=1

# Set to 1 to attempt 'odoo -u all' or 'click-odoo-update' (if available) for all databases on startup.
UPGRADE_ODOO=0

# Set to 1 to execute Odoo tests on startup using modules found in ODOO_EXTRA_ADDONS.
RUN_TESTS=0
# If RUN_TESTS=1, provide a comma-separated list of modules to test (overrides auto-detection).
# EXTRA_MODULES=your_module,another_module
# If RUN_TESTS=1, set to 1 to use Odoo's default test tags instead of the curated exclusion list in entrypoint.sh.
WITHOUT_TEST_TAGS=0
# Enables Odoo test mode (`--test-enable`). Often used with specific compose files like test-env.yml,
# but can be set here. RUN_TESTS=1 implies this is active during the test run.
TEST_ENABLE=False

# ===========================================================================
# Odoo Configuration (/etc/odoo/odoo.conf)
# ===========================================================================
# These variables are used by entrypoint.sh to generate the ODOO_RC file
# if it doesn't exist, or are passed as command-line arguments to Odoo.
# Many correspond directly to Odoo server configuration parameters.
# See: https://www.odoo.com/documentation/17.0/developer/misc/config.html

# ---------------------------------------------------------------------------
# Core Settings
# ---------------------------------------------------------------------------
# Master password required for creating/restoring/duplicating databases.
ADMIN_PASSWORD=my-super-secret-password

# Database filter regex. Use '.*' for all databases, or '^mydatabase$' for a specific one.
DBFILTER=.*
# Specify a database name to automatically select it (optional).
# DBNAME=

# Base path for Odoo installation inside the container. (Default: /opt/odoo)
ODOO_BASEPATH=/opt/odoo
# Path for persistent Odoo filestore data inside the container. (Default: /var/lib/odoo/data)
ODOO_DATA_DIR=/var/lib/odoo/data
# Path for Odoo log files inside the container. (Default: /var/lib/odoo/logs)
ODOO_LOGS_DIR=/var/lib/odoo/logs
# Path to custom addons mount point inside the container. (Default: /mnt/extra-addons)
ODOO_EXTRA_ADDONS=/mnt/extra-addons
# Path to the Odoo configuration file inside the container. (Default: /etc/odoo/odoo.conf)
ODOO_RC=/etc/odoo/odoo.conf
# Path to the Odoo binary
ODOO_CMD=${ODOO_BASEPATH}/odoo-bin

# ---------------------------------------------------------------------------
# Web Server & Workers
# ---------------------------------------------------------------------------
# Network interface Odoo listens on. '0.0.0.0' for all interfaces.
HTTP_INTERFACE=0.0.0.0
# Port Odoo HTTP service listens on.
HTTP_PORT=8069
# Number of HTTP worker processes (0 for multi-threading mode).
WORKERS=0
# Enable if Odoo is behind a reverse proxy (e.g., Nginx, Traefik).
PROXY_MODE=True
# Show the database selection list on the login screen.
LIST_DB=True
# Comma-separated list of modules to load globally (required for core functionality).
SERVER_WIDE_MODULES=base,web

# ---------------------------------------------------------------------------
# Performance Limits
# ---------------------------------------------------------------------------
# Maximum number of concurrent connections.
DB_MAXCONN=64
# Hard memory limit per worker (bytes).
LIMIT_MEMORY_HARD=2684354560
# Soft memory limit per worker (bytes).
LIMIT_MEMORY_SOFT=2147483648
# CPU time limit per request (seconds).
LIMIT_TIME_CPU=600
# Real time limit per request (seconds).
LIMIT_TIME_REAL=1200
# Real time limit for cron jobs (seconds, 0 for no limit).
LIMIT_TIME_REAL_CRON=300
# Maximum concurrent cron job runners.
MAX_CRON_THREADS=2
# Maximum request body size (bytes).
# LIMIT_REQUEST=8196

# ---------------------------------------------------------------------------
# Logging
# ---------------------------------------------------------------------------
# Minimum logging level (e.g., info, debug, warning, error, critical).
LOG_LEVEL=info
# Destination for logs (e.g., :INFO for stdout, /path/to/file). ':LEVEL' format routes to stdout.
LOG_HANDLER=:INFO
# Path to log file if LOG_HANDLER is a file path. (Default: None)
# LOGFILE=
# Log SQL queries.
LOG_DB=False
# Logging level for SQL queries if LOG_DB is True.
LOG_DB_LEVEL=warning

# ---------------------------------------------------------------------------
# Email (SMTP)
# ---------------------------------------------------------------------------
# SMTP server address.
SMTP_SERVER=localhost
# SMTP server port.
SMTP_PORT=25
# SMTP username (set to False if no authentication).
SMTP_USER=False
# SMTP password (set to False if no authentication).
SMTP_PASSWORD=False
# Use SSL for SMTP connection.
SMTP_SSL=False

# ---------------------------------------------------------------------------
# Miscellaneous Odoo Settings
# ---------------------------------------------------------------------------
# Enable unaccent extension for PostgreSQL (requires DB extension).
UNACCENT=False
# Disable loading demo data for modules. Set to True for production.
WITHOUT_DEMO=True
# PostgreSQL SSL mode (e.g., disable, allow, prefer, require, verify-ca, verify-full).
DB_SSLMODE=prefer
# Database template to use when creating new databases.
DB_TEMPLATE=template1