name: Unit Tests

on:
    workflow_call:
      inputs:
        odoo_version:
          required: true
          type: string

jobs:
  test:
    name: Run Unit Tests
    # runs-on: ubuntu-latest
    runs-on: odoo-runner
    services:
      postgres:
        image: hcr.monosense.io/docker.io/library/postgres:14-alpine
        # image: hcr.monosense.io/docker.io/library/postgres:16-alpine
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
          POSTGRES_INITDB_ARGS: --lc-collate=C
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2

      - name: Generate Slug Variables
        uses: rlespinasse/github-slug-action@v5.1.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
        with:
          driver-opts: network=host

      - name: Login to HCR Private Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: hcr.monosense.io
          username: ${{ secrets.HCR_USER }}
          password: ${{ secrets.HCR_TOKEN }}

      - name: Pull and Run Tests in Docker Image
        continue-on-error: false
        run: |
          docker pull hcr.monosense.io/library/odoo:${{ env.GITHUB_REF_SLUG }}-${{ inputs.odoo_version }}
          docker run --env-file <(env | grep -E 'RUN_TESTS|LOG_LEVEL|EXTRA_MODULES|PGHOST') --network="host" --name odoo -t hcr.monosense.io/library/odoo:${{ env.GITHUB_REF_SLUG }}-${{ inputs.odoo_version }}
        env:
          RUN_TESTS: "1"
          LOG_LEVEL: test
          EXTRA_MODULES: base
          PGHOST: localhost
